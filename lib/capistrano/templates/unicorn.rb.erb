env = ENV["RAILS_ENV"] || "production"
app_root = "<%= current_path %>"
working_directory app_root

# Unicorn pid
pid "<%= fetch :unicorn_pid %>"

stderr_path "<%= fetch :unicorn_err_log %>"
stdout_path "<%= fetch :unicorn_err_log %>"

# Unicorn socket listener
listen <%= server.port.to_i + 9 %>, :backlog => 64, :tcp_nopush => true

# Unicorn worker processes
worker_processes <%= server.properties.unicorn_workers || fetch(:unicorn_workers) %>

# Timeout at 30 seconds
timeout <%= fetch :unicorn_timeout %>

preload_app true

before_fork do |server, worker|
  old_pid = "<%= fetch :unicorn_pid %>.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("WINCH", File.read(old_pid).to_i)
      Thread.new do
        sleep 30
        Process.kill("QUIT", File.read(old_pid).to_i)
      end
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
end

after_fork do |server, worker|
end
