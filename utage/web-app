#!/bin/sh

test -f /home/7korobi/web-env  &&  . /home/7korobi/web-env

APP=giji_rails
PID=$APP.unicorn

cd /www/$APP

case "$1" in
status)
  echo
  ps -ef | grep $PID | grep master
  ls -ltra /utage/run/*
  ;;
start)
  rbenv exec unicorn_rails -c /utage/conf/$PID.rb -E production -D
  ;;
stop)
  $0 kill QUIT "unicorn_rails master"
  $0 kill QUIT "rackup private_pub"
  ;;
restart)
  touch /www/$APP/tmp/restart.txt
  ;;
reload)
  $0 kill QUIT "rackup private_pub"
  $0 kill USR2 "unicorn_rails master"
  touch /www/$APP/tmp/restart.txt
  ;;


bundle-update)
  ~/.rbenv/shims/bundle update
  ;;

QUEUE)
  LIST=giji_rsyncs,giji_schedules,giji_vils
  $0 kill TERM "resque-web"
  $0 kill TERM "rake resque:"
  $0 kill QUIT "Waiting for $LIST"
  $0 kill QUIT "resque-scheduler-"

  rbenv exec resque-web -p $WEB_PORT config/initializers/resque.rb     1> /dev/null 2> /dev/null
  QUEUE=$LIST PIDFILE=/utage/run/resque.pid BACKGROUND=yes rbenv exec rake environment resque:work  1> /dev/null 2> /dev/null
  PIDFILE=/utage/run/resque-scheduler.pid BACKGROUND=yes rbenv exec rake resque:scheduler           1> /dev/null 2> /dev/null
  ;;

kill)
  shift
  SIG=$1
  shift
  ps -ef | grep "$*" | grep -v grep | grep -v web-app
  PROCESS_ID=`ps -ef | grep "$*" | grep -v grep | grep -v web-app | head -1 | awk '{print $2}'`
  echo $SIG $PROCESS_ID
  kill -s $SIG $PROCESS_ID
  ;;

exec)
  shift
  ~/.rbenv/shims/bundle exec $*
  ;;

time)
  service ntpd stop
  ntpdate ntp1.jst.mfeed.ad.jp
  /sbin/hwclock --systohc
  service ntpd start
  ntpq -p
  ;;

s|server|test)
  $0 stop
  /opt/local/bin/redis-server /opt/local/etc/redis.conf  &
  /mongo/mongod  &
  rbenv exec rails s
  $0 kill TERM "redis-server"
  $0 kill TERM "/mongo/mongod"
  $0 kill TERM "redis-server"
  $0 kill TERM "/mongo/mongod"
  ;;
c|console)
  shift
  /opt/local/bin/redis-server /opt/local/etc/redis.conf 1> /dev/null 2> /dev/null &
  /mongo/mongod  &
  rbenv exec rails c $*
  $0 kill TERM "redis-server"
  $0 kill TERM "/mongo/mongod"
  $0 kill TERM "redis-server"
  $0 kill TERM "/mongo/mongod"
  ;;

tail-log)
  tail -f /utage/log/* /www/$APP/log/*
  ;;

*)
  echo
  echo  "Usage: $0 command"
  echo
  echo  "  command : status start stop restart reload"
  echo  "          : bundle-update QUEUE time"
  echo  "          : kill exec  s server test  c console  tail-log"
  echo  "  product : $APP"
esac
