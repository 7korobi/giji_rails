user  7korobi;
worker_processes  4;

pid       /utage/run/nginx.pid;
error_log /utage/log/nginx-error.log;


events {
    worker_connections  2048;
}

tcp {
#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /utage/log/tcp-access.log;

    upstream meteor {
        # node.js servers (e.g., socket.io servers)
        server utage.family.jp:4000;

        check interval=3000 rise=2 fall=5 timeout=1000;
    }

    server {
        listen  4000;
        server_name giji.check.jp;

        tcp_nodelay on;
        proxy_pass meteor;
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /utage/log/nginx-access.log;

    sendfile           on;
    keepalive_timeout  65;

    upstream front {
        server utage.family.jp:2549;
    }


    server {
        listen      443 ssl;
        listen       80;
        server_name giji.check.jp;

        access_log /utage/log/nginx-access.log;
        error_log  /utage/log/nginx-error.log;
        root       /www/giji_rails/public;

        try_files $uri $uri/index.html $uri.html @front;

        error_page  404              /404.html;
        error_page  500 502 503 504  /50x.html;

        location ~* ^/assets {
            expires max;
            add_header Cache-Control public;
            add_header Last-Modified "";
            add_header ETag "";
            break;
        }

        location @front {
            proxy_set_header  Client-IP       $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  Host            $http_host;
            proxy_pass http://front;
            break;
        }
    }
}
